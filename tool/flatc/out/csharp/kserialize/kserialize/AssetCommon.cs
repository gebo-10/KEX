// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace kserialize
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct AssetCommon : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public AssetCommon __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Id { get { return __p.bb.GetUint(__p.bb_pos + 0); } }
  public kserialize.AssetType AssetType { get { return (kserialize.AssetType)__p.bb.GetSbyte(__p.bb_pos + 4); } }
  public kserialize.MemeryType MemeryType { get { return (kserialize.MemeryType)__p.bb.GetSbyte(__p.bb_pos + 5); } }

  public static Offset<kserialize.AssetCommon> CreateAssetCommon(FlatBufferBuilder builder, uint Id, kserialize.AssetType AssetType, kserialize.MemeryType MemeryType) {
    builder.Prep(4, 8);
    builder.Pad(2);
    builder.PutSbyte((sbyte)MemeryType);
    builder.PutSbyte((sbyte)AssetType);
    builder.PutUint(Id);
    return new Offset<kserialize.AssetCommon>(builder.Offset);
  }
  public AssetCommonT UnPack() {
    var _o = new AssetCommonT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(AssetCommonT _o) {
    _o.Id = this.Id;
    _o.AssetType = this.AssetType;
    _o.MemeryType = this.MemeryType;
  }
  public static Offset<kserialize.AssetCommon> Pack(FlatBufferBuilder builder, AssetCommonT _o) {
    if (_o == null) return default(Offset<kserialize.AssetCommon>);
    return CreateAssetCommon(
      builder,
      _o.Id,
      _o.AssetType,
      _o.MemeryType);
  }
};

public class AssetCommonT
{
  public uint Id { get; set; }
  public kserialize.AssetType AssetType { get; set; }
  public kserialize.MemeryType MemeryType { get; set; }

  public AssetCommonT() {
    this.Id = 0;
    this.AssetType = kserialize.AssetType.Texture;
    this.MemeryType = kserialize.MemeryType.RAM;
  }
}


}
